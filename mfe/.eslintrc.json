{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": ["plugin:@angular-eslint/template/process-inline-templates"],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "plugins": ["@typescript-eslint", "@angular-eslint", "unicorn"],
    "rules": {
        // ================================================================================================================================
        // ESLint base rules: Possible logic errors
        // ================================================================================================================================
        "array-callback-return": [
            "warn",
            {
                "checkForEach": false
            }
        ],
        "no-async-promise-executor": "warn",
        "no-await-in-loop": "warn",
        "no-compare-neg-zero": "warn",
        "no-cond-assign": "warn",
        "no-constant-binary-expression": "warn",
        "no-constant-condition": "warn",
        "no-constructor-return": "warn",
        "no-control-regex": "warn",
        "no-debugger": "warn",
        "no-dupe-else-if": "warn",
        "no-duplicate-case": "warn",
        "no-empty-character-class": "warn",
        "no-empty-pattern": "warn",
        "no-ex-assign": "warn",
        "no-fallthrough": "warn",
        "no-inner-declarations": "warn",
        "no-invalid-regexp": "warn",
        "no-irregular-whitespace": [
            "warn",
            {
                "skipStrings": false
            }
        ],
        "no-misleading-character-class": "warn",
        "no-promise-executor-return": "warn",
        "no-prototype-builtins": "warn",
        "no-self-assign": "warn",
        "no-self-compare": "warn",
        "no-sparse-arrays": "warn",
        "no-template-curly-in-string": "warn",
        "no-unexpected-multiline": "warn",
        "no-unmodified-loop-condition": "warn",
        "no-unreachable-loop": "warn",
        "no-unsafe-finally": "warn",
        "no-unused-private-class-members": "warn",
        "no-useless-backreference": "warn",
        "require-atomic-updates": "warn",
        "use-isnan": [
            "warn",
            {
                "enforceForIndexOf": true
            }
        ],
        // ================================================================================================================================
        // ESLint base rules: Suggestions
        // ================================================================================================================================
        "arrow-body-style": ["warn", "as-needed"],
        "camelcase": "warn",
        "capitalized-comments": [
            "warn",
            "always",
            {
                "ignoreConsecutiveComments": true
            }
        ],
        "complexity": ["warn", 20],
        "consistent-this": "warn",
        "curly": "warn",
        "default-case-last": "warn",
        "eqeqeq": "warn",
        "grouped-accessor-pairs": ["warn", "getBeforeSet"],
        "id-length": [
            "warn",
            {
                "min": 2,
                "exceptions": ["_"]
            }
        ],
        "max-classes-per-file": [
            "warn",
            {
                "ignoreExpressions": true,
                "max": 2
            }
        ],
        "max-depth": ["warn", 4],
        "max-lines": [
            "warn",
            {
                "max": 1000
            }
        ],
        "no-alert": "warn",
        "no-bitwise": [
            "warn",
            {
                "int32Hint": true
            }
        ],
        "no-caller": "warn",
        "no-case-declarations": "warn",
        "no-console": "warn",
        "no-else-return": "warn",
        "no-empty": "warn",
        "no-empty-static-block": "warn",
        "no-eval": "warn",
        "no-extend-native": "warn",
        "no-extra-bind": "warn",
        "no-extra-boolean-cast": "warn",
        "no-floating-decimal": "warn",
        "no-global-assign": "warn",
        "no-implicit-coercion": [
            "warn",
            {
                "boolean": false
            }
        ],
        "no-iterator": "warn",
        "no-labels": "warn",
        "no-lone-blocks": "warn",
        "no-lonely-if": "warn",
        "no-multi-str": "warn",
        "no-new": "warn",
        "no-new-func": "warn",
        "no-new-object": "warn",
        "no-new-wrappers": "warn",
        "no-octal": "warn",
        "no-octal-escape": "warn",
        "no-param-reassign": "warn",
        "no-regex-spaces": "warn",
        "no-restricted-globals": ["warn", "event", "fdescribe", "fit"],
        "no-restricted-syntax": ["warn", "ForInStatement"],
        "no-sequences": "warn",
        "no-shadow-restricted-names": "warn",
        "no-undef-init": "warn",
        "no-unneeded-ternary": "warn",
        "no-useless-call": "warn",
        "no-useless-catch": "warn",
        "no-useless-computed-key": "warn",
        "no-useless-concat": "warn",
        "no-useless-escape": "warn",
        "no-useless-rename": "warn",
        "no-useless-return": "warn",
        "no-var": "warn",
        "no-void": "warn",
        "no-with": "warn",
        "object-shorthand": "warn",
        "one-var": ["warn", "never"],
        "prefer-arrow-callback": "warn",
        "prefer-const": "warn",
        "prefer-exponentiation-operator": "warn",
        "prefer-numeric-literals": "warn",
        "prefer-object-has-own": "warn",
        "prefer-object-spread": "warn",
        "prefer-promise-reject-errors": "warn",
        "prefer-regex-literals": "warn",
        "prefer-rest-params": "warn",
        "prefer-spread": "warn",
        "prefer-template": "warn",
        "quote-props": ["warn", "as-needed"],
        "radix": "warn",
        "require-unicode-regexp": "warn",
        "require-yield": "warn",
        "spaced-comment": [
            "warn",
            "always",
            {
                "exceptions": ["*"]
            }
        ],
        "symbol-description": "warn",
        // ================================================================================================================================
        // ESLint base rules: Layout & Formatting
        // ================================================================================================================================
        "array-element-newline": ["warn", "consistent"],
        "array-bracket-spacing": "warn",
        "arrow-parens": "warn",
        "arrow-spacing": "warn",
        "block-spacing": "warn",
        "comma-style": "warn",
        "computed-property-spacing": "warn",
        "dot-location": ["warn", "property"],
        "eol-last": "warn",
        "function-call-argument-newline": ["warn", "consistent"],
        "generator-star-spacing": [
            "warn",
            {
                "before": false,
                "after": true
            }
        ],
        "key-spacing": "warn",
        "linebreak-style": ["warn", "unix"],
        "max-len": [
            "warn",
            {
                "code": 140,
                "tabWidth": 2,
                "ignoreTemplateLiterals": true,
                "ignoreRegExpLiterals": true,
                "ignorePattern": "^import\\W.*"
            }
        ],
        "max-statements-per-line": [
            "warn",
            {
                "max": 1
            }
        ],
        "new-parens": "warn",
        "no-multi-spaces": "warn",
        "no-multiple-empty-lines": [
            "warn",
            {
                "max": 1,
                "maxBOF": 0,
                "maxEOF": 0
            }
        ],
        "no-tabs": "warn",
        "no-trailing-spaces": "warn",
        "no-whitespace-before-property": "warn",
        "object-curly-newline": [
            "warn",
            {
                "consistent": true
            }
        ],
        "rest-spread-spacing": "warn",
        "semi-spacing": "warn",
        "semi-style": "warn",
        "space-in-parens": "warn",
        "space-unary-ops": "warn",
        "switch-colon-spacing": "warn",
        "template-curly-spacing": "warn",
        "template-tag-spacing": "warn",
        "unicode-bom": "warn",
        "wrap-iife": "warn",
        "yield-star-spacing": "warn",
        // ================================================================================================================================
        // TypeScript ESLint
        // ================================================================================================================================

        "@typescript-eslint/adjacent-overload-signatures": "warn",
        "@typescript-eslint/array-type": "warn",
        "@typescript-eslint/await-thenable": "warn",
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/ban-tslint-comment": "warn",
        "@typescript-eslint/ban-types": "warn",
        "@typescript-eslint/class-literal-property-style": ["warn", "fields"],
        "@typescript-eslint/consistent-generic-constructors": "warn",
        "@typescript-eslint/consistent-indexed-object-style": ["warn", "record"],
        "@typescript-eslint/consistent-type-assertions": [
            "warn",
            {
                "assertionStyle": "as",
                "objectLiteralTypeAssertions": "allow-as-parameter"
            }
        ],
        "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
        "@typescript-eslint/explicit-function-return-type": [
            "warn",
            {
                "allowExpressions": true,
                "allowTypedFunctionExpressions": true,
                "allowHigherOrderFunctions": true
            }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
                "accessibility": "explicit",
                "overrides": {
                    "constructors": "no-public"
                }
            }
        ],
        "@typescript-eslint/member-ordering": [
            "warn",
            {
                "default": [
                    "public-static-field",
                    "protected-static-field",
                    "private-static-field",
                    "public-instance-field",
                    "protected-instance-field",
                    "private-instance-field",
                    "public-constructor",
                    "protected-constructor",
                    "private-constructor",
                    "public-instance-method",
                    "protected-instance-method",
                    "private-instance-method",
                    "public-static-method",
                    "protected-static-method",
                    "private-static-method"
                    // TODO: Further expand this
                ]
            }
        ],
        "@typescript-eslint/naming-convention": [
            "warn",
            {
                "selector": ["class", "interface", "typeAlias", "enum", "typeParameter"],
                "format": ["PascalCase"],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid"
            },
            {
                "selector": ["variable"],
                "format": ["UPPER_CASE"],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid",
                "modifiers": ["const", "global"]
            },
            {
                "selector": ["variable"],
                "format": ["camelCase"],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid",
                "modifiers": ["const", "global"],
                "types": ["function"]
            },
            {
                "selector": ["parameter"],
                "format": ["camelCase"],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "forbid"
            }
        ],
        "@typescript-eslint/no-confusing-void-expression": [
            "warn",
            {
                "ignoreArrowShorthand": true
            }
        ],
        "@typescript-eslint/no-duplicate-enum-values": "warn",
        "@typescript-eslint/no-dynamic-delete": "warn",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-extra-non-null-assertion": "warn",
        "@typescript-eslint/no-extraneous-class": [
            "warn",
            {
                "allowWithDecorator": true
            }
        ],
        "@typescript-eslint/no-for-in-array": "warn",
        "@typescript-eslint/no-import-type-side-effects": "warn",
        "@typescript-eslint/no-invalid-void-type": "warn",
        "@typescript-eslint/no-misused-new": "warn",
        "@typescript-eslint/no-misused-promises": "warn",
        "@typescript-eslint/no-mixed-enums": "warn",
        "@typescript-eslint/no-namespace": "warn",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-redundant-type-constituents": "warn",
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/no-this-alias": "warn",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "warn",
        "@typescript-eslint/no-unnecessary-type-constraint": "warn",
        "@typescript-eslint/no-unsafe-argument": "warn",
        "@typescript-eslint/no-unsafe-assignment": "warn",
        "@typescript-eslint/no-unsafe-call": "warn",
        "@typescript-eslint/no-unsafe-declaration-merging": "warn",
        "@typescript-eslint/no-unsafe-member-access": "warn",
        "@typescript-eslint/no-unsafe-return": "warn",
        "@typescript-eslint/no-useless-empty-export": "warn",
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/prefer-as-const": "warn",
        "@typescript-eslint/prefer-enum-initializers": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-literal-enum-member": "warn",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-return-this-type": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/prefer-ts-expect-error": "warn",
        "@typescript-eslint/require-array-sort-compare": [
            "warn",
            {
                "ignoreStringArrays": true
            }
        ],
        "@typescript-eslint/restrict-template-expressions": "warn",
        "@typescript-eslint/triple-slash-reference": "warn",
        "@typescript-eslint/unbound-method": [
            "warn",
            {
                "ignoreStatic": true
            }
        ],
        "@typescript-eslint/default-param-last": ["warn"],
        "@typescript-eslint/dot-notation": "warn",
        "@typescript-eslint/no-array-constructor": "warn",
        "@typescript-eslint/no-extra-semi": "warn",
        "@typescript-eslint/no-implied-eval": "warn",
        "@typescript-eslint/no-loop-func": "warn",
        "@typescript-eslint/no-loss-of-precision": "warn",
        "@typescript-eslint/no-restricted-imports": [
            "warn",
            {
                "paths": ["rxjs/operators"]
            }
        ],
        "@typescript-eslint/no-shadow": "warn",
        "@typescript-eslint/no-throw-literal": "warn",
        "@typescript-eslint/no-unused-expressions": "warn",
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "vars": "all",
                "varsIgnorePattern": "^_",
                "args": "after-used",
                "argsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/no-useless-constructor": "warn",
        "@typescript-eslint/require-await": "warn",
        "@typescript-eslint/return-await": "warn",
        // ================================================================================================================================
        // Angular ESLint
        // ================================================================================================================================
        "@angular-eslint/component-class-suffix": "warn",
        "@angular-eslint/component-max-inline-declarations": [
            "warn",
            {
                "template": 3,
                "styles": 3,
                "animations": 15
            }
        ],
        "@angular-eslint/component-selector": [
            "warn",
            {
                "type": "element",
                "prefix": "app",
                "style": "kebab-case"
            }
        ],
        "@angular-eslint/contextual-decorator": "warn",
        "@angular-eslint/contextual-lifecycle": "warn",
        "@angular-eslint/directive-class-suffix": "warn",
        "@angular-eslint/directive-selector": [
            "warn",
            {
                "type": "attribute",
                "prefix": "app",
                "style": "camelCase"
            }
        ],
        "@angular-eslint/no-attribute-decorator": "warn",
        "@angular-eslint/no-conflicting-lifecycle": "warn",
        "@angular-eslint/no-empty-lifecycle-method": "warn",
        "@angular-eslint/no-host-metadata-property": "warn",
        "@angular-eslint/no-input-rename": "warn",
        "@angular-eslint/no-inputs-metadata-property": "warn",
        "@angular-eslint/no-lifecycle-call": "warn",
        "@angular-eslint/no-output-native": "warn",
        "@angular-eslint/no-output-on-prefix": "warn",
        "@angular-eslint/no-output-rename": "warn",
        "@angular-eslint/no-outputs-metadata-property": "warn",
        "@angular-eslint/no-pipe-impure": "warn",
        "@angular-eslint/no-queries-metadata-property": "warn",
        "@angular-eslint/prefer-on-push-component-change-detection": "warn",
        "@angular-eslint/prefer-output-readonly": "warn",
        "@angular-eslint/relative-url-prefix": "warn",
        "@angular-eslint/use-component-selector": "warn",
        "@angular-eslint/use-component-view-encapsulation": "warn",
        "@angular-eslint/use-lifecycle-interface": "warn",
        "@angular-eslint/use-pipe-transform-interface": "warn",
        // ================================================================================================================================
        // ESLint Unicorn
        // ================================================================================================================================
        "unicorn/better-regex": "warn",
        "unicorn/error-message": "warn",
        "unicorn/expiring-todo-comments": "warn",
        "unicorn/filename-case": [
            "warn",
            {
                "case": "kebabCase"
            }
        ],
        "unicorn/no-abusive-eslint-disable": "warn",
        "unicorn/no-for-loop": "warn",
        "unicorn/no-invalid-remove-event-listener": "warn",
        "unicorn/no-lonely-if": "warn",
        "unicorn/no-object-as-default-parameter": "warn",
        "unicorn/no-typeof-undefined": "warn",
        "unicorn/no-useless-length-check": "warn",
        "unicorn/prefer-add-event-listener": "warn",
        "unicorn/prefer-array-find": [
            "warn",
            {
                "checkFromLast": true
            }
        ],
        "unicorn/prefer-array-flat-map": "warn",
        "unicorn/prefer-array-index-of": "warn",
        "unicorn/prefer-array-some": "warn",
        "unicorn/prefer-at": "warn",
        "unicorn/prefer-includes": "warn",
        "unicorn/prefer-logical-operator-over-ternary": "warn",
        "unicorn/prefer-negative-index": "warn",
        "unicorn/throw-new-error": "warn"
    }
}
